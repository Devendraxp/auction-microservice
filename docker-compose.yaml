services : 
  zookeeper : 
    image : zookeeper
    ports :
    - 2181:2181

  kafka : 
    image : confluentinc/cp-kafka
    ports :
    - 9092:9092
    environment : 
      KAFKA_ZOOKEEPER_CONNECT : zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  redis :
    image : redis/redis-stack-server
    ports :
    - 6379:6379
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auction-service:
    image: devendradhuvan/daa-auction-service:latest
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb+srv://devendradhuvan:8440088Dev@cluster01.uw7df.mongodb.net/daa?retryWrites=true&w=majority&appName=Cluster01
      - CORS_ORIGIN=*
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URL=redis://redis:6379
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

  bid-service:
    image: devendradhuvan/daa-bid-service:latest
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb+srv://devendradhuvan:8440088Dev@cluster01.uw7df.mongodb.net/daa?retryWrites=true&w=majority&appName=Cluster01
      - CORS_ORIGIN=*
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URL=redis://redis:6379
      - BATCH_INTERVAL_MS=60000
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

  websocket-gateway:
    image: devendradhuvan/daa-websocket-gateway:latest
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGODB_URI=mongodb+srv://devendradhuvan:8440088Dev@cluster01.uw7df.mongodb.net/daa?retryWrites=true&w=majority&appName=Cluster01
      - CORS_ORIGIN=*
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URL=redis://redis:6379
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: devendradhuvan/daa-frontend:latest
    build:
      context: ./frontend
      args:
        - VITE_AUCTION_SERVICE_URL=/auctions
        - VITE_BID_SERVICE_URL=/bids
        - VITE_WEBSOCKET_SERVICE_URL=/
    ports:
      - "80:80"
    depends_on:
      - auction-service
      - bid-service
      - websocket-gateway
    restart: unless-stopped



